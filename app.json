{
	"metadata": {
		"type": "App"
	},
	"project": {
		"vr": false,
		"cache": false,
		"editable": false,
		"debugMode": true,
		"shadows": true
	},
	"functions": [],
	"stylesheets": [],
	"javascripts": [],
	"images": [],
	"scripts": {
		"51901104-FADB-43D1-B2A3-15BDFA72A48D": [
			{
				"name": "socket.js",
				"source": "socket = socketCluster.create({\n//  port:443,\n\thostname: \"anywhere3d.com\",\n\tcodecEngine: scCodecMinBin,\n});\n\n\nsocket.on(\"connect\", function(status){\n\tdebugMode && console.log({\"socket status\": status});\n});\n\nsocket.on(\"error\", function (err) {\n\tconsole.error( err.stack );\n});\n\nsocket.on(\"authStateChange\", function( state ){\n\tdebugMode && console.log({\"scene authStateChange\": state});\n});\n\nsocket.on(\"subscribe\", function( name, object ){\n\tdebugMode && console.log(\"subscribed successfully to channel:\", object );\n});\n"
			},
			{
				"name": "AW3D (v0.4.3).js",
				"source": "AW3D = { VERSION: \"0.4.3\" };\n\n//  Player Holder.\n\nAW3D.PlayerHolder = function ( name ){\n\tvar holder = new THREE.Object3D();\n\tholder.position.set( 0, 1, 0 );\n\tholder.name = name || \"PLAYER HOLDER\";\n\treturn holder;\n};\n\n//  Player Holder Helper.\n\nAW3D.PlayerHolderHelper = function ( name ){\n\tvar helper = new THREE.BoxHelper();\n\thelper.name = name || \"HOLDER HELPER\";\n\thelper.visible = true;\n\treturn helper;\n};\n\n//  Player Controller Direction pointer.\n\nAW3D.DirectionPointer = function ( name ){\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 20, 12 );\n//  BE CAREFULL: is not \"mesh.rotation.y = -Math.PI\".\n\tgeometry.rotateX( Math.PI / 2 );  //  important!\n\tvar material = new THREE.MeshStandardMaterial({color:0x00ff00});\n\tvar pointer = new THREE.Mesh(geometry, material);\n\tpointer.position.set(0, 15, 0);\n\tpointer.name = name || \"PLAYER DIRECTION\";\n\tpointer.visible = true;\n\treturn pointer;\n};\n\n//  Player Sphere.\n\nAW3D.PlayerSphere = function ( name ){\n\tvar sphere = new THREE.Mesh(\n\t\tnew THREE.SphereGeometry( 15, 8, 4 ),\n\t\tnew THREE.MeshBasicMaterial({ \n\t\t\tcolor: 0xff0000,  \n\t\t\twireframe: true,\n\t\t})\n\t); \n\tsphere.position.y = 12;\n\tsphere.name = name || \"PLAYER SPHERE\";\n\tsphere.visible = true;\n\treturn sphere;\n};\n\n//  Player pointer.\n\nAW3D.PlayerPointer = function ( name ){\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 20, 12 );\n//  BE CAREFULL: is not \"mesh.rotation.y = -Math.PI\".\n\tgeometry.rotateX( Math.PI / 2 );  //  important!\n\tvar material = new THREE.MeshNormalMaterial();\n\tvar pointer = new THREE.Mesh(geometry, material);\n\tpointer.position.set(0, 40, 0);\n\tpointer.name = name || \"PLAYER POINTER\";\n\tpointer.visible = true; // debugMode || false;\n\treturn pointer;\n};\n\n\n//  OutfitManager.js\n\nAW3D.OutfitManager = function(){\n\n\tvar self = this;\n\n\t//  requires \"signals.min.js\".\n\n\tvar Signal = signals.Signal;\n\tthis.added = new Signal();\n\tthis.removed = new Signal();\n\tthis.changed = new Signal();\n\tthis.genderChanged = new Signal();\n\tthis.genderIsChanging = new Signal();\n\n\tthis.eventTimeout = undefined;\n\tthis.direction = new THREE.Object3D();\n\n\tthis.gender = {\n\t\tmale    : false,\n\t\tfemale  : false,\n\t\tshemale : false,\n\t\ttrans   : false,\n\t};\n\n\tthis.genitals = { \n\t\tvagina   : false,\n\t\tpenis    : false,\n\t\tattached : false,\n\t};\n\n\tthis.layers = [\n\t\t\"body\",\n\t\t\"head\",\n\t\t\"face\",\n\t\t\"hairs\",\n\t\t\"upper\", // chest.\n\t\t\"lower\", // hips.\n\t\t\"torso\", // (chest & hips).\n\t\t\"arms\",\n\t\t\"legs\",\n\t\t\"hands\",\n\t\t\"feet\",\n\t\t\"genitals\", \n\t\t\"skeleton\",\n\t];\n\n\tthis.slots = [\n\t\t\"skeleton\",\n\t\t\"body\",\n\t\t\"hairs\",\n\t\t\"eyes\",\n\t\t\"glasses\",\n\t\t\"hat\",\n\t\t\"stockings\",\n\t\t\"underwears\",\n\t\t\"costume\",\n\t\t\"tshirt\",\n\t\t\"skirt\",\n\t\t\"trousers\",\n\t\t\"skirt\",\n\t\t\"dress\",\n\t\t\"shoes\",\n\t\t\"coat\",\n\t\t\"penis\", \n\t\t\"vagina\",\n\t];\n\n\tthis.stickers = [\n\t\t\"skin\",\n\t\t\"makeup\",\n\t\t\"tattoo\",\n\t\t\"bodypaint\",\n\t\t\"neck\",\n\t\t\"chest\",\n\t\t\"belly\",\n\t\t\"upperlimb\",\n\t\t\"arm\",\n\t\t\"forearm\",\n\t\t\"wrist\",\n\t\t\"hand\",\n\t\t\"lowerlimb\",\n\t\t\"thigh\",\n\t\t\"leg\",\n\t\t\"foot\",\n\t\t\"butt\",\n\t\t\"back\",\n\t\t\"scapula\",\n\t\t\"lumbar\",\n\t];\n\n\tthis.attachments = [\n\t\t\"helmet\",\n\t\t\"face\",\n\t\t\"mask\",\n\t\t\"teeth\",\n\t\t\"beard\",\n\t\t\"eyelash\",\n\t\t\"glasses\",\n\t\t\"ears\",\n\t\t\"belly\",\n\t\t\"gun\",\n\t\t\"wepon\",\n\t\t\"knife\",\n\t\t\"sword\",\n\t\t\"bistol\",\n\t\t\"watch\",\n\t\t\"jewelry\",\n\t\t\"earings\",\n\t\t\"necklace\",\n\t\t\"bracelet\",\n\t\t\"bag\",\n\t\t\"handbag\",\n\t\t\"cape\",\n\t\t\"coat\",\n\t\t\"horn\",\n\t\t\"tail\",\n\t\t\"penis\", \n\t];\n\n\tthis.AnimationsHandler = [];\n\n    //  Outfit.AnimationsHandler is an simple array where local\n    //  player.outfit keeps the AW3D.AnimationHandler instances.\n\n\tthis.AnimationsHandler.reset = function(){\n\t\tthis.length = 0; // reset array.\n\t};\n\n\tthis.AnimationsHandler.stop = function(){\n\t\tthis.forEach( function( anim ){\n\t\t\tif (!!anim ) anim.stop();\n\t\t});\n\t};\n\n\tthis.AnimationsHandler.jump = function(){\n\t\tthis.forEach( function( anim ){\n\t\t\tif (!!anim ) anim.jump();\n\t\t});\n\t};\n\n\tthis.AnimationsHandler.play = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.play(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.weightOff = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.weightOff(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.weightOn = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.weightOn(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.fadeIn = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.fadeIn(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.fadeOut = function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.forEach( function( anim ){\n\t\t\t\tif (!!anim ) anim.fadeOut(name);\n\t\t\t});\n\t\t}\n\t};\n\n\tthis.AnimationsHandler.refresh = function(){\n\n\t\tthis.stop();\n\t\tthis.fill(null);\n\t\tthis.reset();\n\n\t\tvar gender = self.getGender();\n\n\t\tself.slots.forEach( function(name, i){\n\n\t\t\tif ( !!self[ name ] ){\n\n\t\t\t\tvar handler = new AW3D.AnimationHandler( self[ name ], gender );\n\n\t\t\t\tself.AnimationsHandler.push( handler );\n\t\t\t}\n\t\t});\n\n\t\tthis.play(\"idle\");\n\t};\n\n//  Outfit EventDispatcher.\n\tObject.assign( this, THREE.EventDispatcher.prototype );  // important!\n\n};\n\n\nAW3D.OutfitManager.prototype = {\n\n\tconstructor: AW3D.OutfitManager,\n\n\trefresh: function(){\n\t\tthis.AnimationsHandler.refresh();\n\t},\n\n\n\tget: function(){\n\n\t\tvar results = {};\n\n\t\tvar _get = ( arg ) => {\n\n\t\t\tif ( typeof( arg ) == \"string\" ) {\n\t\t\t\tif ( !!this[arg] ) results[arg] =  this[arg];\n\t\t\t}\n\n\t\t\tif ( arg instanceof Array ) {\n\t\t\t\targ.forEach( ( key ) => {\n\t\t\t\t\t_get( key );\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tif ( arguments.length > 0 ){\n\n\t\t\tfor (var i in arguments){\n\n\t\t\t\tif ( !arguments[i] ) continue;\n\n\t\t\t\t_get( arguments[i] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.slots.forEach( (name) => { _get( name ); });\n\n\t\t}\n\n\t\treturn results;\n\n\t},\n\n\tset: function(){\n\t//  Set \"this.slot\" but not add to \"this.direction\".\n\n\t\tfor (var arg in arguments){\n\n\t\t\tif (!arguments[arg]) continue;\n\n\t\t\tvar name = Object.keys(arguments[arg])[0];\n\t\t\tvar asset = Object.values(arguments[arg])[0];\n\n\t\t\tif ( !name || name == null || !asset ) continue;\n\t\t\tif ( !!this[ name ] ) this.remove( name );\n\n\t\t\tthis[ name ] = asset;\n\n\t\t//  Create an animation handler for this outfit slot.\n\t\t\tvar handler = new AW3D.AnimationHandler( this[ name ], this.getGender() );\n\n\t\t//  Add animation handler.\n\t\t\tthis.AnimationsHandler.push( handler );\n\n\t\t}\n\n\t\t//  Send \"change\" event only when last \n\t\t//  add has been completed (delay:100ms).\n\n\t\tvar msec = 100;\n\t\tvar self = this;\n\t\tclearTimeout( this.eventTimeout );\n\t\tthis.eventTimeout = setTimeout( function(){\n\t\t\tself.dispatchEvent( {type:\"change\"} );\n\t\t\tself.changed && self.changed.dispatch();\n\t\t}, msec);\n\n\t\treturn this;\n\t},\n\n\tadd: function(){\n\n\t\tfor (var arg in arguments) {\n\n\t\t\tif (!arguments[arg]) continue;\n\n\t\t\tvar name = Object.keys(arguments[arg])[0];\n\t\t\tvar asset = Object.values(arguments[arg])[0];\n\n\t\t\tif ( !name || name == null || !asset ) continue;\n\t\t\tif ( this[ name ] ) this.remove( name );  // important!\n\n\t\t\tthis[ name ] = asset;\n\n\t\t//  Create an animation handler for this outfit slot.\n\t\t\tvar handler = new AW3D.AnimationHandler( this[name], this.getGender() );\n\n\t\t\tif ( this.AnimationsHandler.length ) {\n\n\t\t\t//  Copy each action properties of first animation handler.\n\t\t\t\tvar masterHandler = this.AnimationsHandler[0];\n\n\t\t\t\tfor ( var action in handler.actions ) {\n\n\t\t\t\t\tif ( !action ) break;\n\n\t\t\t\t\thandler.actions[action].loop = masterHandler.actions[action].loop;\n\t\t\t\t\thandler.actions[action].weight = masterHandler.actions[action].weight;\n\t\t\t\t\thandler.actions[action].timeScale = masterHandler.actions[action].timeScale;\n\t\t\t\t\thandler.actions[action].currentTime = masterHandler.actions[action].currentTime;\n\t\t\t\t\thandler.actions[action].interpolationType = masterHandler.actions[action].interpolationType;\n\n\t\t\t\t\tif ( masterHandler.actions[action].isPlaying ) {\n\t\t\t\t\t\thandler.actions[action].play( masterHandler.actions[action].currentTime );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t//  Add animation handler.\n\t\t\t\tthis.AnimationsHandler.push( handler );\n\n\t\t\t} else {\n\n\t\t\t\t//  Add animation handler.\n\t\t\t\tthis.AnimationsHandler.push( handler );\n\t\t\t\t//  Play idle.\n\t\t\t\tthis.AnimationsHandler.play(\"idle\");\n\n\t\t\t}\n\n\t\t//  Add outfit item to scene.\n\t\t\tthis.direction.add( this[ name ] );\n\n\t\t//\tUpdate textures.\n\t\t\tif (this[ name ].material && !this[ name ].material.materials) {\n\n\t\t\t//  Single material.\n\n\t\t\t\tObject.keys(this[ name ].material).filter( (key) => {\n\t\t\t\t\treturn this[ name ].material[ key ] instanceof THREE.Texture;\n\t\t\t\t}).forEach( (key) => {\n\t\t\t\t\tthis[ name ].material[ key ].needsUpdate = true;\n\t\t\t\t});\n\n\t\t\t\tthis[ name ].material.needsUpdate = true;\n\n\t\t\t} else if (this[ name ].material.materials && this[ name ].material.materials.length) {\n\n\t\t\t//  Multimaterial.\n\n\t\t\t\tthis[ name ].material.materials.forEach(function(material){\n\n\t\t\t\t\tObject.keys(material).filter(function(key){\n\t\t\t\t\t\treturn material[ key ] instanceof THREE.Texture;\n\t\t\t\t\t}).forEach(function(key){\n\t\t\t\t\t\tmaterial[ key ].needsUpdate = true;\n\t\t\t\t\t});\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t}\n\n\t\t//  this.AnimationsHandler.refresh(); \n\n\t\tthis.dispatchEvent( {type:\"add\"} );\n\t\tthis.added && this.added.dispatch();\n\n\t\t//  Send \"change\" event only when last \n\t\t//  add has been completed (delay:100ms).\n\n\t\tvar msec = 100;\n\t\tvar self = this;\n\t\tclearTimeout( this.eventTimeout );\n\t\tthis.eventTimeout = setTimeout( function(){\n\t\t\tself.dispatchEvent( {type:\"change\"} );\n\t\t\tself.changed && self.changed.dispatch();\n\t\t}, msec);\n\n\t\treturn this;\n\t},\n\n\tremove: function(){\n\n\t\tif ( arguments.length == 0 ) return;\n\n\t\tfor (var arg in arguments){\n\n\t\t\tif ( !arguments[arg] ) continue;\n\t\t\tif ( !this.slots.includes( arguments[arg] ) ) continue;\n\n\t\t\tvar name = arguments[arg];\n\n\t\t//  Remove from scene (does not throw error).\n\t\t\tthis.direction.remove( this[ name ] );\n\n\t\t//  Dispose textures.\n\n\t\t\tif ( this[ name ] ) {\n\n\t\t\t\tif (this[ name ].material && !this[ name ].material.materials) {\n\n\t\t\t\t\t//  Single material.\n\n\t\t\t\t\tObject.keys(this[ name ].material).filter( (key) => {\n\t\t\t\t\t\treturn this[ name ].material[ key ] instanceof THREE.Texture;\n\t\t\t\t\t}).forEach( (key) => {\n\t\t\t\t\t\tthis[ name ].material[ key ].dispose();\n\t\t\t\t\t\t//  DO NOT NULL/DELETE TEXTURE.  important!\n\t\t\t\t\t});\n\n\t\t\t\t\tthis[ name ].material.dispose();\n\n\t\t\t\t} else if (this[ name ].material.materials && this[ name ].material.materials.length) {\n\n\t\t\t\t\t//  Multimaterial.\n\n\t\t\t\t\tthis[ name ].material.materials.forEach(function(material){\n\n\t\t\t\t\t\tObject.keys(material).filter(function(key){\n\t\t\t\t\t\t\treturn material[ key ] instanceof THREE.Texture;\n\t\t\t\t\t\t}).forEach(function(key){\n\t\t\t\t\t\t\tmaterial[ key ].dispose();\n\t\t\t\t\t\t\t//  DO NOT NULL/DELETE TEXTURE. important!\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tmaterial.dispose();\n\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t//  Dispose geometry.\n\t\t\tif ( this[ name ] ) this[ name ].geometry.dispose();\n\n\t\t//  Dispose bones texture. !important\n\t\t\tif ( this[ name ] && this[ name ].skeleton  )\n\t\t\t\tthis[ name ].skeleton.boneTexture.dispose();\n\n\t\t//  Remove the animation handler.\n\n\t\t\tif ( this.AnimationsHandler.length ) {\n\n\t\t\t\t//  Find handler index.\n\t\t\t\tvar index = this.AnimationsHandler.findIndex((handler) => {\n\t\t\t\t\treturn handler.mesh == this[ name ];\n\t\t\t\t});\n\n\t\t\t\t//  Keep in mind \"splice()\" uses \"zero\" \n\t\t\t\t//  and \"negative\" indexes also. // danger!\n\t\t\t\t//  debugMode && console.log({\"index\": index});\n\n\t\t\t\tif ( index != undefined && index > -1 ) {\n\n\t\t\t\t//  Get and remove handler from AnimationsHandler.\n\t\t\t\t\tvar handler = this.AnimationsHandler.splice(index, 1)[0];\n\n\t\t\t\t//  Stop handler animations.\n\t\t\t\t\thandler.stop();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t//  Delete slot.\n\t\t\tdelete this[ name ];\n\n\t\t}\n\n\t\t//  this.AnimationsHandler.refresh(); \n\n\t\tthis.dispatchEvent( {type:\"remove\"} );\n\t\tthis.removed && this.removed.dispatch();\n\n\t\t//  Send \"change\" event only when last \n\t\t//  remove has been completed (delay:100ms).\n\n\t\tvar msec = 100;\n\t\tvar self = this;\n\t\tclearTimeout( this.eventTimeout );\n\t\tthis.eventTimeout = setTimeout( function(){\n\t\t\tself.dispatchEvent( {type:\"change\"} );\n\t\t\tself.changed && self.changed.dispatch();\n\t\t}, msec);\n\n\t\treturn this;\n\t},\n\n\tremoveAll: function() { \n\n\t\tthis.slots.forEach( ( name ) => {\n\t\t\tif ( this[ name ] ) this.remove( name );\n\t\t});\n\n\t\treturn this;\n\n\t},\n\n\tremoveFromScene: function(){\n\n\t\tif ( arguments.length == 0 ) {\n\n\t\t\tthis.slots.forEach( ( name ) => {\n\t\t\t\tthis.remove( name );\n\t\t\t});\n\n\t\t} else {\n\n\t\t\tfor (var arg in arguments){\n\t\t\t\tthis.remove( arguments[arg] );\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveTexture: function( outfit, map, index ){\n\n\t\t//  outfit: outfit slot name (e.g \"body\", \"hair\", \"dress\", etc.)\n\t\t//  map   : material map name (e.g. \"map\", \"bumpMap\", \"normalMap\", etc.)\n\t\t//  index : material index of multimaterial (\"null\" for simple material).\n\n\t\tif ( !this[ outfit ] ) return;\n\t\tif ( !this[ outfit ].material ) return;\n\n\t\t//  Material.\n\n\t\tif ( index == null || isNaN(index) || typeof(index) != \"number\" ) {\n\n\t\t\tif ( !this[ outfit ].material[ map ] ) return;\n\n\t\t\tthis[ outfit ].material[ map ].dispose();\n\t\t\tthis[ outfit ].material[ map ] = null;\n\t\t\tthis[ outfit ].material.needsUpdate = true;\n\n\t\t\treturn;\n\t\t}\n\n\t\t//  MultiMaterial.\n\n\t\tif ( typeof(index) == \"number\" && index > -1 ) {\n\n\t\t\tif ( !this[ outfit ].material.materials ) return;\n\t\t\tif ( !this[ outfit ].material.materials[ index ] ) return;\n\t\t\tif ( !this.body.material.materials[ index ][ map ] ) return;\n\n\t\t\tthis[ outfit ].material.materials[ index ][ map ].dispose();\n\t\t\tthis[ outfit ].material.materials[ index ][ map ] = null;\n\t\t\tthis[ outfit ].material.materials[ index ].needsUpdate = true;\n\n\t\t\treturn;\n\t\t}\n\t},\n\n\tsetGender: function( gender ){\n\n\t\tvar self = this;\n\n\t\tif ( this.getGender(gender) ) return this;\n\n\t//\tif ( gender =-= undefined ) { what }\n\t//\tif ( !Object.keys(this.gender).includes(gender) ) { what }\n\n\t\tObject.keys(this.gender).forEach( function( name ){\n\t\t\tself.gender[ name ] = ( name == gender );\n\t\t});\n\n\t\tthis.genderChanged.dispatch(); // important!\n\n\t//  Outfit direction scale. (object3D)\n\n\t\tswitch ( this.getGender() ){\n\n\t\t\tcase \"male\":\n\t\t\t\tthis.direction.scale.set(1, 1, 1);\n\t\t\tbreak;\n\n\t\t\tcase \"trans\":\n\t\t\tcase \"female\":\n\t\t\tcase \"shemale\":\n\t\t\t\tthis.direction.scale.set(0.95, 0.95, 0.95);\n\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis.direction.scale.set(1, 1, 1);\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.AnimationsHandler.refresh();\n\n\t\treturn this;\n\t},\n\n\tgetGender: function(){\n\n\t\tvar self = this;\n\n\t\tif (arguments.length > 0){\n\n\t\t\treturn self.gender[ arguments[0] ];\n\n\t\t} else {\n\n\t\t\treturn Object.keys(this.gender).find( function( name ){\n\t\t\t\treturn self.gender[ name ];\n\t\t\t});\n\n\t\t}\n\t},\n\n\tresetGender: function(){\n\n\t\tvar self = this;\n\n\t\tObject.keys(this.gender).forEach( function( name ){\n\t\t\tself.gender[ name ] = false;\n\t\t});\n\n\t\tthis.direction.scale.set(1, 1, 1);\n\t\tthis.AnimationsHandler.refresh();\n\n\t\treturn this;\n\t},\n\n\tgetPose: function( name ){\n\n\t\tvar name = name || \"body\";\n\t\tif ( !this[ name ] ) return;\n\t\tif ( !this.slots.includes( name ) ) return;\n\n\t\tvar pose = [];\n\n\t\tfor (var i in this[ name ].skeleton.bones) {\n\t\t\tvar key = {}; // {\"pos\":[], \"rot\":[], \"scl\":[]};\n\t\t\tkey.pos = this[ name ].skeleton.bones[i].position.toArray();\n\t\t\tkey.rot = this[ name ].skeleton.bones[i].quaternion.toArray();\n\t\t\tkey.scl = this[ name ].skeleton.bones[i].scale.toArray();\n\t\t\tpose.push(key);\n\t\t}\n\n\t\treturn pose;\n\t},\n\n\n\ttoJSON: function(){\n\n\t\tvar data = {};\n\n\t\tif ( arguments.length == 0 ) {\n\n\t\t\tfor (var i = 0; i < this.slots.length; i++) {\n\n\t\t\t\tvar name = this.slots[i];\n\n\t\t\t\tif ( !name ) continue;\n\t\t\t\tif ( !this[ name ] ) continue;\n\t\t\t\tif ( !this.slots.includes( name ) ) continue;\n\n\t\t\t\tdata[ name ] = {};\n\t\t\t\tdata[ name ].name      = name;\n\t\t\t\tdata[ name ].visible   = this[ name ].visible;\n\t\t\t\tdata[ name ].scale     = this[ name ].scale.toArray();\n\t\t\t\tdata[ name ].geometry  = this[ name ].geometry.sourceFile;\n\t\t\t\tdata[ name ].material  = materialtoJSON( this[ name ].material );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tfor (var i = 0; i < arguments.length; i++){\n\n\t\t\t\tvar name = arguments[i];\n\n\t\t\t\tif ( !name ) continue;\n\t\t\t\tif ( !this[ name ] ) continue;\n\t\t\t\tif ( !this.slots.includes( name ) ) continue;\n\n\t\t\t\tdata[ name ] = {};\n\t\t\t\tdata[ name ].name      = name;\n\t\t\t\tdata[ name ].visible   = this[ name ].visible;\n\t\t\t\tdata[ name ].scale     = this[ name ].scale.toArray();\n\t\t\t\tdata[ name ].geometry  = this[ name ].geometry.sourceFile;\n\t\t\t\tdata[ name ].material = materialtoJSON( this[ name ].material );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.getGender() ) \n\t\t\tdata.gender = this.getGender();\n\n\t\tvar data = JSON.stringify( data );\n\n\t\tif ( data === \"{}\" ) \n\t\t\treturn null;\n\t\telse \n\t\t\treturn JSON.parse( data );\n\n\t},\n\n//  fromJSON (v2.2).\n\n\tfromJSON: function( json ){\n\n\t\t//  Make a copy of json. important!\n\n\t\tif ( typeof(json) == \"object\" ) {\n\n\t\t\ttry {\n\n\t\t\t\tvar json = JSON.stringify( json ); // string copy of json.\n\n\t\t\t} catch(err) { throw err; }\n\n\t\t}\n\n\t\t//  requires \"validation.js\".\n\n\t\tif ( typeof(json) == \"string\" ) {\n\n\t\t\tif ( !validator.isJSON( json ) ) {\n\t\t\t\tthrow \"Validation Error: json not valid\";\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow \"Type Error: json is not string type.\";\n\n\t\t}\n\n\n\t\tvar json = JSON.parse( json ); // (now is a json copy).\n\n\n\t\tvar self = this;\n\n\t\t//  Set gender first.\n\n\t\tthis.removeAll();          // important!\n\t\tvar gender = json.gender;  // important!\n\t\tthis.setGender( gender );  // important!\n\n\t\t//  Clear gender of json.\n\t\tdelete json.gender; // (is a copy of json).\n\n\t\t//  ORDER DOES MATTER for transparency:\n\t\t//   Order in localPlayer.outfit.direction.children array DOES MATTER.\n\t\t//  So we must deliver the outfit.direction.children array with the following order:\n\t\t//  [skeleton, body, eyes, hairs, stockings, underwears, tshirt, trousers, costume, dress, shoes, coat]\n\n\t\tvar orderMap = [];\n\n\t\t(function(){\n\t\t\tif (json.skeleton) orderMap.push(\"skeleton\");\n\t\t\tif (json.body) orderMap.push(\"body\");\n\t\t\tif (json.eyes) orderMap.push(\"eyes\");\n\t\t\tif (json.glasses) orderMap.push(\"glasses\");\n\t\t\tif (json.hairs) orderMap.push(\"hairs\");\n\t\t\tif (json.hat) orderMap.push(\"hat\");\n\t\t\tif (json.stockings) orderMap.push(\"stockings\");\n\t\t\tif (json.underwears) orderMap.push(\"underwears\");\n\t\t\tif (json.costume) orderMap.push(\"costume\");\n\t\t\tif (json.tshirt) orderMap.push(\"tshirt\");\n\t\t\tif (json.trousers) orderMap.push(\"trousers\");\n\t\t\tif (json.skirt) orderMap.push(\"skirt\");\n\t\t\tif (json.dress) orderMap.push(\"dress\");\n\t\t\tif (json.shoes) orderMap.push(\"shoes\");\n\t\t\tif (json.coat) orderMap.push(\"coat\");\n\t\t})();\n\n\t\tdebugMode && console.log({\"orderMap\": orderMap});\n\n\t\tvar outfit = {};\n\t\tvar promises = [];\n\n\t\tfor (var i = 0; i < orderMap.length; i++){\n\n\t\t\tpromises.push(\n\t\t\t\tnew Promise(function(resolve, reject){\n\n\t\t\t\t\tvar object = {};\n\t\t\t\t\tvar sortIndex = i;\n\t\t\t\t\tvar key = orderMap[i];\n\n\t\t\t\t\tobject.name      = json[ key ].name;\n\t\t\t\t\tobject.visible   = json[ key ].visible;\n\t\t\t\t\tobject.material  = json[ key ].material;\n\t\t\t\t\tobject.geometry  = json[ key ].geometry; // (stringified json or url)\n\n\t\t\t\t//  Scale.\n\t\t\t\t\tvar vector = new THREE.Vector3();\n\t\t\t\t\tobject.scale = vector.fromArray( json[ key ].scale );\n\n\t\t\t\t//\tdebugMode && console.log( \"object:\", object );\n\n\t\t\t\t//  Material.\n\t\t\t\t\tvar material = materialfromJSON( object.material );\n\n\t\t\t/*\n\t\t\t\t\tif ( validator.isURL( object.geometry ) ) {\n\n\t\t\t\t\t//  Geometry: cache first.\n\t\t\t\t\t\treturn caches.match( object.geometry ).then(function(response){\n\n\t\t\t\t\t\t\tif ( !response ) \n\t\t\t\t\t\t\t\tthrow \"geometry not found! Trying to fetch geometry...\";\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t\t}).catch(function(err){\n\t\t\t\t\t\t\tconsole.error(err);\n\n\t\t\t\t\t\t\treturn caches.open(\"geometries\").then(function(cache){\n\t\t\t\t\t\t\t\treturn cache.add( object.geometry ).then(function(){\n\t\t\t\t\t\t\t\t\treturn cache.match( object.geometry ).then(function(response){\n\t\t\t\t\t\t\t\t\t\treturn response;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t}).then(function(response){\n\n\t\t\t\t\t\t\tif (!response) throw \"None response returned!\";\n\n\t\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\t\t}).then(function( gmtjson ){\n\t\t\t\t\t\t\tif ( !gmtjson ) throw \"None json returned fromJSON!\";\n\n\t\t\t\t\t\t\tvar loader = new THREE.JSONLoader();\n\t\t\t\t\t\t\tvar geometry = loader.parse( gmtjson ).geometry;\n\n\t\t\t\t\t\t\tgeometry.name = gmtjson.name;\n\t\t\t\t\t\t\tgeometry.computeFaceNormals();\n\t\t\t\t\t\t\tgeometry.computeVertexNormals();\n\t\t\t\t\t\t\tgeometry.computeBoundingBox();\n\t\t\t\t\t\t\tgeometry.computeBoundingSphere();\n\t\t\t\t\t\t\tgeometry.sourceFile = object.geometry;  // (url) important!\n\n\t\t\t\t\t\t\tvar skinned = new THREE.SkinnedMesh( geometry, material );\n\n\t\t\t\t\t\t\tskinned.renderDepth = 1;\n\t\t\t\t\t\t\tskinned.frustumCulled = false;\n\t\t\t\t\t\t\tskinned.position.set( 0, 0, 0 );\n\t\t\t\t\t\t\tskinned.rotation.set( 0, 0, 0 );\n\t\t\t\t\t\t\tskinned.scale.copy( object.scale );\n\t\t\t\t\t\t\tskinned.castShadow = true;\n\t\t\t\t\t\t\tskinned.name = object.name;\n\t\t\t\t\t\t\tskinned.sortIndex = sortIndex;\n\n\t\t\t\t\t\t\tvar obj = {};\n\t\t\t\t\t\t\tobj[ key ] = skinned;\n\t\t\t\t\t\t\tresolve( obj );\n\n\t\t\t\t\t\t\toutfit[ key ] = skinned;\n\n\t\t\t\t\t\t}).catch(function(err){\n\t\t\t\t\t\t\tresolve( null );\n\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\t\t\t\t*/\n\n\t\t\t\t\tif ( validator.isJSON( object.geometry ) ) {\n\n\t\t\t\t\t\tvar loader = new THREE.JSONLoader();\n\t\t\t\t\t\tvar gmtjson = JSON.parse( object.geometry ); // (string to json) important!\n\t\t\t\t\t\tvar geometry = loader.parse( gmtjson ).geometry; // important!\n\n\t\t\t\t\t\tgeometry.name = gmtjson.name;\n\t\t\t\t\t\tgeometry.computeFaceNormals();\n\t\t\t\t\t\tgeometry.computeVertexNormals();\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\t\t\t\t\t\tgeometry.computeBoundingSphere();\n\t\t\t\t\t\tgeometry.sourceFile = object.geometry;  // (stringified json) important!\n\t\t\t\t\t//\tdebugMode && console.log( \"geometry:\", geometry );\n\n\t\t\t\t\t\tvar skinned = new THREE.SkinnedMesh( geometry, material );\n\n\t\t\t\t\t\tskinned.renderDepth = 1;\n\t\t\t\t\t\tskinned.frustumCulled = false;\n\t\t\t\t\t\tskinned.position.set( 0, 0, 0 );\n\t\t\t\t\t\tskinned.rotation.set( 0, 0, 0 );\n\t\t\t\t\t\tskinned.scale.copy( object.scale );\n\t\t\t\t\t\tskinned.castShadow = true;\n\t\t\t\t\t\tskinned.name = object.name;\n\t\t\t\t\t\tskinned.sortIndex = sortIndex;\n\n\t\t\t\t\t\tvar obj = {};\n\t\t\t\t\t\tobj[ key ] = skinned;\n\t\t\t\t\t\tresolve( obj );\n\n\t\t\t\t\t\toutfit[ key ] = skinned;\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tresolve( null );\n\t\t\t\t\t\t\t\n\t\t\t\t}).catch(function(err){\n\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\treturn null; // important!\n\n\t\t\t\t}) // end of promise,\n\t\t\t); // end push.\n\t\t}// end for.\n\n\t\tdebugMode && console.log(\"promises:\", promises);\n\n\t\treturn Promise.all(promises).then(function(results){\n\t\t\tdebugMode && console.log(\"results:\", results);\n\n\t\t\t//  cleanup.\n\t\t\tvar results = results.filter(Boolean); // important!\n\t\t\tdebugMode && console.log(\"cleaned results:\", results);\n\n\t\t\t//  add outfit.\n\t\t\twhile (results.length) {\n\t\t\t\tself.add( results.shift() );\n\t\t\t}\n\n\t\t}).then(function(){\n\t\t\tdebugMode && console.log(\"outfit:\", outfit);\n\t\t\treturn outfit;\n\t\t});\n\n\t},\n\n\n\t//  Outfit DNA is an object that contains the outfit data that needed to\n\t//  create the player oufit anywhere remotly. It is player outfit assets\n\t//  in transfered structure ( aka like .toJSON() ).\n\t//\n\t//  .toDNA(); .fromDNA(dna); Usage:\n\t//      dna = localPlayer.outfit.toDNA();\n\t//      player = new Player();\n\t//      player.outfit = new AW3D.Outfit(player);\n\t//      player.outfit.fromDNA( dna );\n\n\t//\t.toDNA, .fromDNA (v2).\n\t//\trequires \"rawinflate.js, rawdeflate.js, and validator.js\"\n\n\ttoDNA: function(){\n\n\t\treturn encode( JSON.stringify( this.toJSON() ) );\n\n\t\tfunction encode( string ) {\n\t\t\tif ( !!window.RawDeflate ) {\n\t\t\t\treturn window.btoa( RawDeflate.deflate( string ) );\n\t\t\t} else {\n\t\t\t\treturn string;\n\t\t\t}\n\t\t}\n\n\t},\n\n\tfromDNA: function( dna ){\n\n\t\t//  Validation.\n\n\t\tif ( typeof(dna) == \"string\" ) {\n\n\t\t\tif ( validator.isBase64( dna ) ) {\n\n\t\t\t\treturn new Promise( (resolve, reject) => {\n\t\t\t\t\tvar json = JSON.parse( decode( dna ) );\n\t\t\t\t\tresolve( this.fromJSON(json) );\n\t\t\t\t}).catch( function(err){ \n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tthrow err; \n\t\t\t\t});\n\n\t\t\t} else if ( validator.isJSON( dna ) ) {\n\n\t\t\t\treturn new Promise( (resolve, reject) => {\n\t\t\t\t\tvar json = JSON.parse( dna );\n\t\t\t\t\tresolve( this.fromJSON(json) );\n\t\t\t\t}).catch( function(err){ \n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tthrow err; \n\t\t\t\t});\n\n\t\t\t} else {\n\n\t\t\t\treturn new Promise( (resolve, reject) => {\n\t\t\t\t\tvar err = \"DNA is not valid.\";\n\t\t\t\t\tconsole.error( \"Error: \" + err );\n\t\t\t\t\treject( \"Validation Error: \" + err );\n\t\t\t\t\t//  throw Error( err );\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn new Promise( (resolve, reject) => {\n\t\t\t\tvar err = \"Unsupported DNA type: \" + typeof(dna);\n\t\t\t\tconsole.error( \"Error: \" + err );\n\t\t\t\treject( \"Validation Error: \" + err );\n\t\t\t\t//  throw Error( err );\n\t\t\t});\n\n\t\t}\n\n\t\tfunction decode( string ) {\n\t\t\tif ( !!window.RawDeflate ) {\n\t\t\t\treturn RawDeflate.inflate( window.atob( string ) );\n\t\t\t} else {\n\t\t\t\treturn string;\n\t\t\t}\n\t\t}\n\n\t},\n\n};\n\n\n//  AW3D AnimationHandler.js\n\n//  Reset THREE.AnimationHandler.animations array.\nTHREE.AnimationHandler.animations.length = 0;\nAnimationManager = THREE.AnimationHandler;\n\nAW3D.AnimationHandler = function ( mesh, gender ) {\n\n\tthis.mesh = mesh;\n\tthis.gender = gender; // important!\n\tthis.actions = {};\n\n//  This create the animations of skinned mesh. \n\n\tthis.reloadActions(); // important!\n\n};\n\n\nAW3D.AnimationHandler.prototype = {\n\n\tconstructor: AW3D.AnimationHandler,\n\n\tfindAction: function(action){\n\t\t//  returns new array with resutls.\n\t\treturn THREE.AnimationHandler.animations.filter( function(animation){\n\t\t\treturn (animation == action); // boolean.\n\t\t}); \n\t},\n\n\tfindByUuid: function( name ){\n\t\t//  returns new array with resutls.\n\t\treturn THREE.AnimationHandler.animations.filter( function(animation){\n\t\t\treturn (animation.uuid == this.actions[ name ].uuid); // boolean.\n\t\t});\n\t},\n\n\tfindByName: function( name ){\n\t\t//  returns new array with resutls.\n\t\treturn THREE.AnimationHandler.animations.filter( function(animation){\n\t\t\treturn (animation.data.name == name); // boolean.\n\t\t});\n\t},\n\n\tgetCurrentAction: function(){\n\t\t//  returns current playing action name.\n\t\tfor (var name in this.actions) {\n\t\t\tif ( !name ) return;\n\t\t\tvar action = this.actions[ name ];\n\t\t\tif ( action.isPlaying ) {\n\t\t\t\treturn name;\n\t\t\t}\n\t\t}\n\t},\n\n    //  To stop an animation, find the animation in\n    //  THREE.AnimationHandler.animations and stop it from there.\n\n        stop: function stop(){\n            var self = this;\n            Object.keys( self.actions ).forEach(function(name, i){\n                var action = self.actions[name];\n                self.findAction(action).forEach(function(animation){\n                    animation.stop();\n                });\n            });\n        },\n\n    //  To delete an action, stop the animation in \n    //  THREE.AnimationHandler.animations and then delete it from this.actions.\n\n\tdelete: function( name ){\n\t\tvar action = this.actions[ name ];\n\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\tanimation.stop();\n\t\t});\n\t\tdelete this.actions[ name ];\n\t},\n\n\treset: function reset(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tthis.actions[ name ].weight = 1;\n\t\t\tthis.actions[ name ].timeScale = 1;\n\t\t\tthis.actions[ name ].currentTime = 0;\n\t\t}\n\t},\n\n\tresetAll: function(){\n\t\tvar self = this;\n\t\tObject.keys( self.actions ).forEach(function(name, i){\n\t\t\tself.reset( name );\n\t\t});\n\t},\n\n\tdeleteAll: function(){\n\t\tvar self = this;\n\t\tObject.keys( self.actions ).forEach(function(name, i){\n\t\t\tself.delete[ name ]\n\t\t});\n\t},\n\n\tplay: function play(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tif ( !this.actions[ name ] ) return;\n\t\t\tthis.actions[ name ].play(0);\n\t\t}\n\t},\n\n    //  To pause an animation, find the animation \n    //  in THREE.AnimationHandler.animations and set timeScale to 0.\n    \n\tpause: function pause(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tanimation.timeScale = 0;\n\t\t\t});\n\t\t}\n\t},\n\n    //  To unpause an animation, find the animation \n    //  in THREE.AnimationHandler.animations and set timeScale to 1.\n\n\tcontinue: function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tanimation.timeScale = 1;\n\t\t\t});\n\t\t}\n\t},\n\n\tweightOff: function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tanimation.weight = 0;\n\t\t\t});\n\t\t}\n\t},\n\n\tweightOn: function(){\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tanimation.weight = 1;\n\t\t\t});\n\t\t}\n\t},\n\n\tfadeIn: function(){\n\t\tvar fades = [];\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar animation = this.actions[ name ];\n\t\t\tfades.push(function fade(){\n\t\t\t\tvar requestId = requestAnimationFrame( fade );\n\t\t\t\tanimation.timeScale = 1; // !important\n\t\t\t\tanimation.weight += ( 0.05 * (1 - animation.weight) );\n\t\t\t\tanimation.play(animation.currentTime, animation.weight);\n\t\t\t\tdebugMode && console.log( \"fadeIn: \", round(animation.weight, 3) );\n\t\t\t\tif ( round(animation.weight, 3) > 0.9 ){\n\t\t\t\t\tcancelAnimationFrame( requestId );\n\t\t\t\t\tanimation.weight = 1;\n\t\t\t\t\tanimation.timeScale = 1;\n\t\t\t\t\tanimation.play(animation.currentTime, 1);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t//  Call all functions in fades.\n\t\twhile (fades.length){ \n\t\t\tfades.shift().call(); \n\t\t}\n\t},\n\n\tfadeOut: function(){\n\t\tvar fades = [];\n\t\tfor (var i in arguments){\n\t\t\tvar name = arguments[i];\n\t\t\tvar action = this.actions[ name ];\n\t\t\tthis.findAction( action ).forEach(function(animation){\n\t\t\t\tfades.push(function fade(){\n\t\t\t\t\tvar requestId = requestAnimationFrame( fade );\n\t\t\t\t\tanimation.timeScale = 1; // !important\n\t\t\t\t\tanimation.weight -= ( 0.05 * animation.weight );\n\t\t\t\t\tanimation.play(animation.currentTime, animation.weight);\n\t\t\t\t\tdebugMode && console.log( \"fadeOut:\", round(animation.weight, 3) );\n\t\t\t\t\tif ( round(animation.weight, 3) < 0.1 ){\n\t\t\t\t\t\tcancelAnimationFrame( requestId );\n\t\t\t\t\t\tanimation.stop();\n\t\t\t\t\t\tanimation.weight = 1;\n\t\t\t\t\t\tanimation.timeScale = 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t//  Call all functions in fades.\n\t\twhile (fades.length){ \n\t\t\tfades.shift().call(); \n\t\t}\n\t},\n\n\tidle: function idle(){\n\t\tthis.actions.idle.play(0);\n\t},\n\n\tjump: function jump(){\n\t\tthis.actions.jump.play(0);\n\t},\n\n\trun: function run(){\n\t\tthis.actions.run.play(0);\n\t},\n\n\twalk: function walk(){\n\t\tthis.actions.walk.play(0);\n\t},\n\n    //  ------------------------------------------------------  //\n    //  This create the animations of skinned mesh. important!  //\n    //  ------------------------------------------------------  //\n\n\tloadAction: function(){\n\n\t\tfor ( var i in arguments ) {\n\n\t\t\tvar name = arguments[i];\n\n\t\t\tvar data;\n\n\t\t\tswitch (this.gender) {\n\n\t\t\t\tcase \"male\":\n\t\t\t\t\tdata = MaleAnimations[ name ];\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"female\":\n\t\t\t\t\tdata = FemaleAnimations[ name ];\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"shemale\":\n\t\t\t\t\tdata = FemaleAnimations[ name ];\n\t\t\t\tbreak;\n\n\t\t\t\tcase \"trans\":\n\t\t\t\t\tdata = FemaleAnimations[ name ];\n\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tdata = Animations[ name ];\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar action = new THREE.Animation( this.mesh, data );\n\t\t\taction.uuid = THREE.Math.generateUUID();\n\t\t\taction.weight = 1;\n\t\t\taction.timeScale = 1;\n\t\t\taction.currentTime = 0;\n\t\t\tthis.actions[ name ] = action;\n\t\t}\n\n\t},\n\n\treloadActions: function(){\n\n\t\tvar self = this;\n\n\t\tthis.stop();\n\t\tthis.deleteAll();\n\t\tthis.actions = {};\n\n\t\tif (this.actions.jump) this.actions.jump.loop = false;\n\n\t\tif (MaleAnimations && this.gender && this.gender == \"male\") {\n\t\t\tObject.keys( MaleAnimations ).forEach(function(name, i){\n\t\t\t\tself.loadAction( name );\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (MaleAnimations && this.gender && this.gender == \"shemale\") {\n\t\t\tObject.keys( MaleAnimations ).forEach(function(name, i){\n\t\t\t\tself.loadAction( name );\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (FemaleAnimations && this.gender && this.gender == \"female\") {\n\t\t\tObject.keys( FemaleAnimations ).forEach(function(name, i){\n\t\t\t\tself.loadAction( name );\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (FemaleAnimations && this.gender && this.gender == \"trans\") {\n\t\t\tObject.keys( FemaleAnimations ).forEach(function(name, i){\n\t\t\t\tself.loadAction( name );\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( Animations && !this.gender ) {\n\t\t\tObject.keys( Animations ).forEach(function(name, i){\n\t\t\t\tself.loadAction( name );\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.gender \n\t\t\t&& this.gender != \"male\" && this.gender != \"female\" \n\t\t\t&& this.gender != \"shemale\" && this.gender != \"trans\" \n\t\t){\n\n\t\t\tconsole.warn( \"AW3D.AnimationHandler: reloadActions(\" + this.gender \n\t\t\t\t+ \"): Gender exists but is not male, female, shemale or trans.\"\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t},\n\n};\n\n\n//  MATERIAL TO JSON.\n\n//  materialtoJson.js (v1.6)\n//  Return a promise with the \n//  material json object resolved.\n\n\nfunction materialtoJSON( material ){\n/*body*/\n\n\t//  MULTIMATERIAL.\n\n\tif ( material.type == \"MultiMaterial\" || material.materials ) {\n\n\t//  multimaterial to json.\n\n\t\tvar multjson = {\n\n\t\t\t_id: \"\",\n\t\t\ttype: material.type,\n\t\t\tuuid: material.uuid || THREE.Math.generateUUID(),\n\n\t\t};\n\n\n\t//  materials to json.\n\n\t\tmultjson.materials = [];\n\n\t\tfor ( var i = 0; i < material.materials.length; i++ ){\n\n\t\t\tmultjson.materials.push( materialtoJSON( material.materials[i] ) );\n\n\t\t}\n\n\n\t\tdebugMode && console.log( \"multimaterial to json:\", multjson );\n\n\t\treturn multjson;\n\n\t}\n\n\n\t//  MATERIAL.\n\n\tvar json = {};\n\n\tfor ( var name in material ){\n\n\t\tif ( material[ name ] == undefined ) continue;         // important!\n\t\tif ( material[ name ] instanceof Function ) continue;  // important!\n\t\tif ( typeof(material[name]) === \"function\" ) continue; // important!\n\n\t\tswitch( name ){\n\n\t\t\tcase \"defines\":\n\t\t\tcase \"program\":\n\t\t\tcase \"_listeners\":\n\t\t\tcase \"needsUpdate\":\n\t\t\tcase \"_needsUpdate\":\n\t\t\tcase \"__webglShader\":\n\t\t\tbreak;\n\n\n\t\t//  name, _id, uuid.\n\n\t\t\tcase \"name\":\n\t\t\t\tjson.name = material.name;\n\t\t\tbreak;\n\n\t\t\tcase \"_id\":\n\t\t\t\tjson._id = material._id || ObjectId();\n\t\t\tbreak;\n\n\t\t\tcase \"uuid\":\n\t\t\t\tjson.uuid = material.uuid || THREE.Math.generateUUID();\n\t\t\tbreak;\n\n\n\t\t//  texture to json.\n\n\t\t\tcase \"map\":\n\t\t\tcase \"bumpMap\":\n\t\t\tcase \"alphaMap\":\n\t\t\tcase \"normalMap\":\n\t\t\tcase \"emissiveMap\":\n\t\t\tcase \"displacementMap\":\n\t\t\tcase \"metalnessMap\":\n\t\t\tcase \"roughnessMap\":\n\t\t\tcase \"specularMap\":\n\t\t\tcase \"lightMap\":\n\t\t\tcase \"aoMap\":\n\n\t\t\t\tif ( !(material[ name ] instanceof THREE.Texture) ) {\n\t\t\t\t\tthrow name + \" is not instance of THREE.Texture\";\n\t\t\t\t}\n\n\t\t\t\tjson[ name ] = texturetoJSON( material[ name ] );\n\n\t\t\tbreak;\n\n\n\t\t//  three color to hex.\n\n\t\t\tcase \"color\":\n\t\t\tcase \"emissive\":\n\t\t\tcase \"specular\":\n\n\t\t\t\tif ( !(material[ name ] instanceof THREE.Color) ) {\n\t\t\t\t\tthrow name + \" is not instance of THREE.Color\";\n\t\t\t\t}\n\n\t\t\t\tjson[ name ] = material[ name ].getHex();\n\n\t\t\tbreak;\n\n\n\t\t//  vector2 to array.\n\n\t\t\tcase \"normalScale\":\n\n\t\t\t\tif ( !(material[ name ] instanceof THREE.Vector2) ) {\n\t\t\t\t\tthrow name + \" is not instance of THREE.Vector2\";\n\t\t\t\t}\n\n\t\t\t\tjson[ name ] = material[ name ].toArray();\n\n\t\t\tbreak;\n\n\n\n\t\t\tcase \"envMap\":\n\t\t\t\t//  TODO: cube texture.\n\t\t\tbreak;\n\n\n\t\t\tdefault:\n\t\t\t\tjson[ name ] = material[ name ];\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn json;\n/*body*/\n}\n\n\n//  TEXTURE TO JSON.\n//  Return a promise resolved \n//  with the texture json object.\n\nfunction texturetoJSON( texture ){\n/*body*/\n\tvar json = {};\n\n\tfor (var name in texture ){\n\n\t\tif ( texture[ name ] == undefined ) continue;\n\t\tif ( texture[ name ] instanceof Function ) continue;\n\t\tif ( typeof(texture[name]) === \"function\" ) continue;\n\n\t\tswitch (name){\n\n\t\t\tcase \"_listeners\":\n\t\t\tbreak;\n\n\t\t//  uuid.\n\n\t\t\tcase \"uuid\":\n\t\t\t\tjson[ name ] = texture[ name ] || THREE.Math.generateUUID();\n\t\t\tbreak;\n\n\n\t\t//  vector2 to array.\n\n\t\t\tcase \"offset\":\n\t\t\tcase \"repeat\":\n\t\t\t\tjson[ name ] = texture[ name ].toArray();\n\t\t\tbreak;\n\n\n\t\t//  image to json.\n\n\t\t\tcase \"image\":\n\t\t\t\tjson[ name ] = texture.sourceFile || getDataURL( texture[ name ] ); // important!\n\t\t\tbreak;\n\n\n\t\t\tdefault:\n\t\t\t\tjson[ name ] = texture[ name ];\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn json;\n/*body*/\n}\n\n\n//  IMAGE TO JSON.\n//  Return an image object.\n\nfunction imagetoJSON( image ){\n\n/*body*/\n\treturn {\n\t\tuuid: THREE.Math.generateUUID(),\n\t\tsrc: image.src || getDataURL( image ),\n\t};\n/*body*/\n\n}\n\n\n//  TEXTURE IMAGE TO JSON.\n//  Return an image object.\n\nfunction textureImagetoJSON( texture ){\n\n/*body*/\n\treturn {\n\t\tuuid: THREE.Math.generateUUID(),\n\t\tsrc: texture.sourceFile || texture.image.src || getDataURL( texture.image ),\n\t};\n/*body*/\n\n}\n\n\n\n//  MATERIAL FROM JSON.\n//  materialfromJson.js (v1.7)\n\nfunction materialfromJSON( json ){\n\n/*body*/\n//  MULTIMATERIAL.\n\n\tif ( json.materials && json.materials.length ) {\n\n\t\tvar materials = [];\n\n\t\tfor ( var i = 0; i < json.materials.length; i++ ){\n\n\t\t\tmaterials.push( materialfromJSON( json.materials[i] ) );\n\n\t\t}\n\n\n\t//  Create multimaterial.\n\n\t\tvar multimaterial = new THREE.MeshFaceMaterial(materials);\n\n\t\tmultimaterial.uuid = json.uuid || THREE.Math.generateUUID();\n\n\t\treturn multimaterial;\n\n\t}\n\n//  MATERIAL.\n\n\tvar options = {};\n\n\tfor (var name in json){\n\n\t\tif ( json[ name ] == undefined ) continue; // important!\n\n\t\tswitch (name){\n\n\t\t\tcase \"_id\":\n\t\t\tcase \"meta\":\n\t\t\tbreak;\n\n\n\t\t//  uuid.\n\n\t\t\tcase \"uuid\":\n\t\t\t\toptions.uuid = json.uuid || THREE.Math.generateUUID();\n\t\t\tbreak;\n\n\n\t\t//  texture from json.\n\n\t\t\tcase \"map\":\n\t\t\tcase \"aoMap\":\n\t\t\tcase \"bumpMap\":\n\t\t\tcase \"alphaMap\":\n\t\t\tcase \"lightMap\":\n\t\t\tcase \"normalMap\":\n\t\t\tcase \"emissiveMap\":\n\t\t\tcase \"specularMap\":\n\t\t\tcase \"metalnessMap\":\n\t\t\tcase \"roughnessMap\":\n\t\t\tcase \"displacementMap\":\n\n\t\t\t\toptions[ name ] = texturefromJSON( json[ name ] );\n\n\t\t\tbreak;\n\n\n\t\t//  three color to hex.\n\n\t\t\tcase \"color\":\n\t\t\tcase \"emissive\":\n\t\t\tcase \"specular\":\n\n\t\t\t\toptions[ name ] = new THREE.Color();\n\t\t\t\toptions[ name ].setHex( json[ name ] );\n\n\t\t\tbreak;\n\n\n\t\t//  vector2 from array.\n\n\t\t\tcase \"normalScale\":\n\n\t\t\t\toptions[ name ] = new THREE.Vector2();\n\t\t\t\toptions[ name ].fromArray( json[ name ] );\n\n\t\t\tbreak;\n\n\n\t\t\tcase \"envMap\":\n\t\t\t\t//  TODO: cube texture.\n\t\t\tbreak;\n\n\n\t\t\tdefault:\n\t\t\t\toptions[ name ] = json[ name ];\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn new THREE[ options.type ](options);\n/*body*/\n\n}\n\n\n//  TEXTURE FROM JSON (v1.7)\n\nfunction texturefromJSON( json ){\n\n/*body*/\n\tvar loader = new THREE.TextureLoader()\n\tloader.setCrossOrigin(\"\"); // important!\n\tvar url = json.sourceFile || json.image || \"https://i.imgur.com/ODeftia.jpg\";\n\tvar texture = loader.load( url );\n\ttexture.sourceFile = url;\n\n\tfor ( var name in json ){\n\n\t\tswitch (name){\n\n\t\t\tcase \"meta\":\n\t\t\tcase \"image\":\n\t\t\tcase \"sourceFile\":\n\t\t\tbreak;\n\n\t\t//  array to vector2.\n\n\t\t\tcase \"offset\":\n\t\t\tcase \"repeat\":\n\n\t\t\t\tif ( json[ name ].length != 2) break;\n\n\t\t\t\ttexture[ name ] = new THREE.Vector2();\n\t\t\t\ttexture[ name ].fromArray( json[ name ] );\n\n\t\t\tbreak;\n\n\n\t\t//  wrapS & wrapT.\n\n\t\t\tcase \"wrap\":\n\n\t\t\t\tif ( json[ name ].length != 2) break;\n\t\t\t\tif ( !( json[ name ] instanceof Array ) ) break;\n\n\t\t\t\ttexture.wrapS = json[ name ][0];\n\t\t\t\ttexture.wrapT = json[ name ][1];\n\n\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\ttexture[ name ] = json[ name ];\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn texture;\n/*body*/\n\n}\n\n\n//  IMAGE FROM JSON (v1.7)\n\nfunction imagefromJSON( json, onLoad, onProgress, onError ){\n\n/*body*/\n\tvar url = json.src || json.url || json.data;\n\tif ( url === undefined ) return new Image();\n\n\tvar loader = new THREE.ImageLoader()\n//  Use cors origin \"anonymous\" to avoid tainted image.\n\tloader.setCrossOrigin(\"anonymous\"); // important!\n\treturn loader.load( url, onLoad, onProgress, onError );\n/*body*/\n\n}\n\n\n//  SKINNED FROM JSON.\n//  skinnedfromJSON.js (v1.7)\n\n\nfunction skinnedfromJSON( json ){\n\n/*body*/\n\tvar scale = json.scale;\n\tvar visible = json.visible;\n\n\t//\tgeometry.\n\n\tvar data;\n\n\tswitch ( typeof( json.geometry ) ) {\n\t\tcase \"string\":\n\t\t\tif ( validator && validator.isJSON( json.geometry ) ) {\n\t\t\t\tdata = JSON.parse( json.geometry );\n\t\t\t\tbreak;\n\t\t\t}\n\t\tbreak;\n\n\t\tcase \"object\":\n\t\t\tdata = json.geometry;\n\t\tbreak;\n\t}\n\n//\tdebugMode && console.log({\"data\": data});\n\n\tif ( data === undefined ) return;\n\n\tvar loader = new THREE.JSONLoader();\n\tvar geometry = loader.parse(data).geometry;\n\n\tgeometry.name = data.name;\n\tgeometry.computeFaceNormals();\n\tgeometry.computeVertexNormals();\n\tgeometry.computeBoundingBox();\n\tgeometry.computeBoundingSphere();\n\tgeometry.sourceType = \"ascii\";\n\tgeometry.sourceFile = json.geometry;\n\n//\tdebugMode && console.log({\"geometry\": geometry});\n\n\t//\tmaterial.\n\n\tvar material = materialfromJSON( json.material );\n\n\tif ( material === undefined ) {\n\t\tmaterial = new THREE.MeshStandardMaterial({skinning:true});\n\t}\n\n//\tdebugMode && console.log({\"material\": material});\n\n\t//\tskinned.\n\n\tvar skinned = new THREE.SkinnedMesh( geometry, material );\n\n\tif ( skinned === undefined ) return;\n\n\tskinned.renderDepth = 1;\n\tskinned.frustumCulled = false;\n\tskinned.position.set( 0, 0, 0 );\n\tskinned.rotation.set( 0, 0, 0 );\n\tskinned.scale.fromArray( scale );\n\tskinned.visible = visible;\n\n//\tdebugMode && console.log({\"skinned\": skinned});\n\n\treturn skinned;\n/*body*/\n\n}\n\n\n//  blobToDataUrl.js\n//  https://gist.github.com/tantaman/6921973\n//\thttps://hacks.mozilla.org/2012/02/storing-images-and-files-in-indexeddb/\n\nfunction convertToBase64(blob, callback) {\n\n/*body*/\n\tvar reader = new FileReader();\n\n\treader.onload = function(e) {\n\t\tcallback(reader.result);\n\t};\n\n\treader.readAsDataURL(blob);\n/*body*/\n\n}\n\n\n\n//  dataUrlToBlob.js\n//  https://gist.github.com/tantaman/6921973\n\nfunction dataURLToBlob(dataURL) {\n\n/*body*/\n\tvar BASE64_MARKER = \";base64,\";\n\n\tif (dataURL.indexOf(BASE64_MARKER) == -1) {\n\t\tvar parts = dataURL.split(\",\");\n\t\tvar contentType = parts[0].split(\":\")[1];\n\t\tvar raw = parts[1];\n\n\t\treturn new Blob([raw], {type: contentType});\n\t}\n\n\tvar parts = dataURL.split(BASE64_MARKER);\n\tvar contentType = parts[0].split(\":\")[1];\n\tvar raw = window.atob(parts[1]);\n\tvar rawLength = raw.length;\n\n\tvar uInt8Array = new Uint8Array(rawLength);\n\n\tfor (var i = 0; i < rawLength; ++i) {\n\t\tuInt8Array[i] = raw.charCodeAt(i);\n\t}\n\n\treturn new Blob([uInt8Array], {type: contentType});\n/*body*/\n\n}\n\n\n\n//  makePowerOfTwo.js\n\nfunction makePowerOfTwo( image, natural ) {\n\n/*body*/\n\tvar canvas = document.createElement( \"canvas\" );\n\n\tif ( natural ){\n\t\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.naturalWidth );\n\t\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.naturalHeight );\n\t} else {\n\t\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.width );\n\t\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.height );\n\t}\n\n\tvar context = canvas.getContext( \"2d\" );\n\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n//  debugMode && console.warn( \"outfitLoader:makePowerOfTwo(img):\", \n//  \"Image resized to:\", canvas.width, \"x\", canvas.height );\n\n\treturn canvas;\n/*body*/\n\n}\n\n\n//  getDataURL.js\n\nfunction getDataURL( image ) {\n\n/*body*/\n\tvar canvas;\n\n\tif ( image.toDataURL !== undefined ) {\n\n\t\tcanvas = image;\n\n\t} else {\n\n\t\tcanvas = document.createElementNS( \"http://www.w3.org/1999/xhtml\", \"canvas\" );\n\t\tcanvas.width = image.width;\n\t\tcanvas.height = image.height;\n\n\t\tcanvas.getContext( \"2d\" ).drawImage( image, 0, 0, image.width, image.height );\n\n\t}\n\n\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\treturn canvas.toDataURL( \"image/jpeg\", 0.6 );\n\n\t} else {\n\n\t\treturn canvas.toDataURL( \"image/png\" );\n\n\t}\n/*body*/\n\n}\n\n\n//  deepCopy.js\n\nfunction deepCopy(obj) {\n\n/*body*/\n\tif (Object.prototype.toString.call(obj) === \"[object Array]\") {\n\t\tvar out = [], i = 0, len = obj.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tout[i] = arguments.callee(obj[i]);\n\t\t}\n\t\treturn out;\n\t}\n\tif (typeof obj === \"object\") {\n\t\tvar out = {}, i;\n\t\tfor ( i in obj ) {\n\t\t\tout[i] = arguments.callee(obj[i]);\n\t\t}\n\t\treturn out;\n\t}\n\treturn obj;\n/*body*/\n\n}\n\n\n//  round.js  \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\"\n\nfunction round(number, precision) {\n\n/*body*/\n\tvar shift = function (number, precision, reverseShift) {\n\t\tif (reverseShift) {\n\t\t\tprecision = -precision;\n\t\t}  \n\t\tnumArray = (\"\" + number).split(\"e\");\n\t\treturn +(numArray[0] + \"e\" + (numArray[1] ? (+numArray[1] + precision) : precision));\n\t};\n\treturn shift(Math.round(shift(number, precision, false)), precision, true);\n/*body*/\n\n}\n\n\n\n//\tfunction blobToDataURL(blob, callback).\n//\tvar source = convertToBase64.toString().split(delimiter)[1];\n//\twindow.blobToDataURL = new Function( \"blob\", \"callback\", source );\n//debugMode && console.log( \"blobToDataURL:\", window.blobToDataURL.toString() );\n\n//\tfunction dataURLToBlob(dataURL).\n//\tvar source = dataURLToBlob.toString().split(delimiter)[1];\n//\twindow.dataURLToBlob = new Function( \"dataURL\", source );\n//debugMode && console.log( \"dataURLToBlob:\", window.dataURLToBlob.toString() );\n\n//\tfunction makePowerOfTwo(image, natural).\n//\tvar source = getDataURL.toString().split(delimiter)[1];\n//\twindow.makePowerOfTwo = new Function( \"image\", \"natural\", source );\n//debugMode && console.log( \"makePowerOfTwo:\", window.makePowerOfTwo.toString() );\n\n//\tfunction getDataURL(image).\n//\tvar source = getDataURL.toString().split(delimiter)[1];\n//\twindow.getDataURL = new Function( \"image\", source );\n//debugMode && console.log( \"getDataURL:\", window.getDataURL.toString() );\n\n//\tfunction deepCopy(obj).\n//\tvar source = deepCopy.toString().split(delimiter)[1];\n//\twindow.deepCopy = new Function( \"obj\", source );\n//debugMode && console.log( \"deepCopy:\", window.deepCopy.toString() );\n\n//\tfunction round(number, precision).\n//\tvar source = round.toString().split(delimiter)[1];\n//\twindow.round = new Function( \"number\", \"precision\", source );\n//debugMode && console.log( \"round:\", window.round.toString() );\n\n\n//\tfunction materialtoJSON(material).\n//\tvar source = materialtoJSON.toString().split(delimiter)[1];\n//\twindow.materialtoJSON = new Function( \"material\", source );\n//debugMode && console.log( \"materialtoJSON:\", window.materialtoJSON.toString() );\n\n//\tfunction materialfromJSON(json).\n//\tvar source = materialfromJSON.toString().split(delimiter)[1];\n//\twindow.materialfromJSON = new Function( \"json\", source );\n//debugMode && console.log( \"materialfromJSON:\", window.materialfromJSON.toString() );\n\n\n/*\nfunction preventEditorPropagation( event ) {\n//\tPrevent editor to delete object.\n\tevent.stopPropagation(); // important!\n//\tLittle paranoid safety.\n\tswitch ( event.keyCode ) {\n\t\tcase 8:  // BACKSPACE.\n\t\tcase 46: // DELETE.\n\t\t\tevent.stopPropagation(); \n\t\tbreak;\n\t}\n}\n*/\n\n"
			}],
		"5E90B25E-FD80-4DD9-910F-ADFE7535F7E1": [
			{
				"name": "background.js",
				"source": "scene.remove( this );\n\nsceneBackground([\n\t\"https://i.imgur.com/v6bjQLb.jpg\", // \"posx.jpg\",\n\t\"https://i.imgur.com/lwrlr6P.jpg\", // \"negx.jpg\", \n\t\"https://i.imgur.com/kKUKBJg.jpg\", // \"posy.jpg\", \n\t\"https://i.imgur.com/N0oZlJR.jpg\", // \"negy.jpg\", \n\t\"https://i.imgur.com/x9q8z0K.jpg\", // \"posz.jpg\", \n\t\"https://i.imgur.com/HYcK7Ii.jpg\", // \"negz.jpg\"\n]);\n\nfunction sceneBackground( urls ){\n\tif (!scene || Number(THREE.REVISION) < 78) return;\n\tvar loader = new THREE.CubeTextureLoader();\n\tloader.load( urls, function(texture){\n\t\ttexture.name = \"BACKGROUND\";\n\t\tscene.background = texture;\n\t\tscene.background.needsUpdate = true;\n\t});\n}\n"
			}],
		"F65CF23F-D191-4B9C-B53C-09ED7768195E": [
			{
				"name": "octree.js",
				"source": "scene.remove( this );\n\nworld = new MW.World();\n\n//  OCTREE.\n\nvar partition = 1;\nvar min = new THREE.Vector3( -5000, -1000, -5000 );\nvar max = new THREE.Vector3(  5000,  1000,  5000 );\n\noctree = new MW.Octree( min, max, partition );\n\nworld.add( octree );\n\n//\tUPDATE.\n\nvar clock = new THREE.Clock(); // important!\n\nfunction update(){\n\n\tvar delta = clock.getDelta();\n\tworld.step( delta );\n\n}\n"
			},
			{
				"name": "helpers.js",
				"source": "var octMeshHelpers = [];\nvar octEdgesHelpers = [];\n\nfunction octreeHelpers( octree ){\n\tvar nodeIndex = octree.nodes.length - 1;\n\tvar node = octree.nodes[ nodeIndex ][0];\n\tvar x = node.max.x - node.min.x;\n\tvar y = node.max.y - node.min.y;\n\tvar z = node.max.z - node.min.z;\n\tvar geometry = new THREE.BoxGeometry(x, y, z);\n\tvar material = new THREE.MeshBasicMaterial({visible:false});\n\n\toctree.nodes[ nodeIndex ].forEach(function(node){\n\n\t\tvar x = node.max.x - node.min.x;\n\t\tvar y = node.max.y - node.min.y;\n\t\tvar z = node.max.z - node.min.z;\n\n\t\tvar mesh = new THREE.Mesh(geometry, material);\n\t\tvar helper = new THREE.EdgesHelper( mesh, 0xffff00 );\n\n\t\tmesh.position.set(\n\t\t\tnode.min.x + (x/2),\n\t\t\tnode.min.y + (y/2),\n\t\t\tnode.min.z + (z/2)\n\t\t);\n\n\t\t//  scene.add( mesh );\n\t\tscene.add( mesh, helper );\n\n\t\toctMeshHelpers.push(mesh);\n\t\toctEdgesHelpers.push(helper);\n\t});\n}\n\nfunction octreeNodeHelper( node ){\n\tvar x = node.max.x - node.min.x;\n\tvar y = node.max.y - node.min.y;\n\tvar z = node.max.z - node.min.z;\n\tvar geometry = new THREE.BoxGeometry(x, y, z);\n\tvar material = new THREE.MeshBasicMaterial({visible:false});\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tmesh.position.set(\n\t\tnode.min.x + (x/2),\n\t\tnode.min.y + (y/2),\n\t\tnode.min.z + (z/2)\n\t);\n\tscene.add( mesh );\n\toctMeshHelpers.push(mesh);\n\tvar helper = new THREE.EdgesHelper( mesh, 0xffff00 );\n\thelper.name = \"octree helper\";\n\tscene.add( helper );\n\toctEdgesHelpers.push(helper);\n}\n\n//  Remove octree mesh helpers.\n\nfunction removeOctreeHelpers(){\n\toctMeshHelpers.forEach( function( item, i ){\n\t\tscene.remove( octMeshHelpers[i] );\n\t\tvar geometry = octMeshHelpers[i].geometry;\n\t\tvar material = octMeshHelpers[i].material;\n\t\tgeometry.dispose();\n\t\tmaterial.dispose();\n\t});\n\tconsole.log( \"octree mesh helpers has been removed.\" );\n}\n"
			}],
		"EE2CFCFB-78B3-4D8C-8398-56EBD4EFBA98": [
			{
				"name": "LocalPlayer.js",
				"source": "scene.remove( this );\n\nvar radius = 3;\nlocalPlayer = new LocalPlayer( radius );\nlocalPlayer.holder.visible = false;\ndebugMode && console.log({\"localPlayer\": localPlayer});\n\n//\tconstructor.\n\nfunction LocalPlayer(radius){\n\n\tvar player = this; // important!\n\n//  Player Holder.\n\n\tthis.holder = AW3D.PlayerHolder(); // important!\n\tthis.holder.visible = true;\n\tscene.add( this.holder );\n\n//  Player Sphere.\n\n\tthis.sphere = AW3D.PlayerSphere();\n\tthis.sphere.position.y = 12;\n\tthis.holder.add( this.sphere ); \n\n//\tthis.holderHelper = AW3D.PlayerHolderHelper();\n//  scene.add( this.holderHelper );\n\n\n//  Outfit Manager.\n\n\tthis.outfit = new AW3D.OutfitManager(); // important!\n\n\tthis.outfit.update = function() {\n\n\t//  Update avatar rotation y.\n\t\tvar direction = player.controller.direction - Math.PI;\n\n\t//  \"this\" is the \"localPlayer.outfit\".\n\t\tthis.direction.rotation.y = direction;\n\n\t//  Update avatar position.\n\t\tvar x = player.controller.center.x;\n\t\tvar y = player.controller.center.y - player.controller.radius;\n\t\tvar z = player.controller.center.z;\n\n\t//  \"this\" is the \"localPlayer.outfit\".\n\t\tthis.direction.position.set( x, y, z );\n\n\t};\n\n\t\n//  Player Controller.\n\n\tvar radius = parseInt( radius ); // important!\n\tif ( isNaN( radius ) || radius < 1 ) radius = 1;\n\n\tthis.controller = new MW.CharacterController( this.holder, radius );\n\tthis.controller.isWalking = false;\n\n\tthis.controller.getdata = function( action ){\n\n\t\tvar data = {};\n\t\tdata.playerid = socket.id;\n\t\tdata.radius = this.radius;\n\t\tdata.isGrounded = this.isGrounded;\n\t\tdata.isOnSlope = this.isOnSlope;\n\t\tdata.isIdling  = this.isIdling;\n\t\tdata.isJumping = this.isJumping;\n\t\tdata.isRunning = this.isRunning;\n\t\tdata.isWalking = this.isWalking;\n\t\tdata.direction = this.direction;\n\t\tdata.movementSpeed = this.movementSpeed;\n\t\tdata.jumpStartTime = this.jumpStartTime;\n\t\tdata.position = this.center.toArray();\n\t\tif (!!action) data.action = action;\n\n\t\treturn data;\n\t};\n\n\tfunction onStartJumping(){\n\t\tplayer.outfit.AnimationsHandler.weightOff(\"idle\", \"walk\", \"run\");\n\t};\n\n\tfunction onEndJumping(){\n\t\tplayer.outfit.AnimationsHandler.weightOn(\"idle\", \"walk\", \"run\");\n\n\t\tif ( player.controller.isRunning && player.controller.isWalking ) {\n\n\t\t\tplayer.outfit.AnimationsHandler.stop();\n\t\t\tplayer.controller.movementSpeed = 28;\n\t\t\tplayer.outfit.AnimationsHandler.play(\"walk\");\n\t\t\tplayer.controller.dispatchEvent({type:\"startRunning\"});\n\n\t\t} else if ( player.controller.isRunning && !player.controller.isWalking ) {\n\n\t\t\tplayer.outfit.AnimationsHandler.stop();\n\t\t\tplayer.controller.movementSpeed = 45;\n\t\t\tplayer.outfit.AnimationsHandler.play(\"run\");\n\t\t\tplayer.controller.dispatchEvent({type:\"startRunning\"});\n\n\t\t} else {\n\n\t\t\tplayer.outfit.AnimationsHandler.stop();\n\t\t\tplayer.controller.movementSpeed = 0;\n\t\t\tplayer.outfit.AnimationsHandler.play(\"idle\");\n\t\t\tplayer.controller.dispatchEvent({type:\"startIdling\"});\n\n\t\t}\n\t}\n\n\tthis.controller.addEventListener(\"endJumping\",   onEndJumping);\n\tthis.controller.addEventListener(\"startJumping\", onStartJumping);\n\n//  Add controller to world.\n\n\tworld.add( this.controller ); // important!\n\n\tdebugMode && console.log( \n\t\t\"characterPool length:\", world.characterPool.length, \n\t\t\"index:\", world.characterPool.indexOf( this.controller )\n\t);\n\n//  Add outfit direction holder to scene.\n\n\tscene.add( this.outfit.direction ); // important!\n\n};\n\nLocalPlayer.prototype = {\n\n//  Collect position, direction, nickname, and gender.\n\n\tgetdata: function( socket ){\n\n\t\tif ( !socket ) return;\n\t\tvar data = {};\n\t\tdata.playerid  = socket.id;\n\t\tdata.nickname  = this.nickname;\n\t\tdata.gender    = this.outfit.getGender();\n\t\tdata.direction = this.outfit.direction.rotation.y;\n\t\tdata.position  = this.outfit.direction.position.toArray();\n\t\tdata.dna       = this.outfit.toDNA();\n\t\tdebugMode && console.log(\"player data:\", data);\n\n\t\treturn data;\n\n\t},\n\n//  Remote player set data.\n\n\tsetdata: function( data ){\n\n\t\tif ( !data.playerid || data.playerid != this.playerid ) return;\n\n\t\tthis.playerid = data.playerid;\n\t\tthis.nickname = data.nickname;\n\t\tthis.outfit.setGender( data.gender );\n\t\tthis.outfit.direction.rotation.y = data.direction;\n\t\tthis.outfit.direction.position.fromArray(data.position);\n\n\t\tif (data.action != undefined) {\n\t\t\tthis.outfit.AnimationsHandler.stop();\n\t\t\tthis.outfit.AnimationsHandler.play( data.action );\n\t\t}\n\n\t},\n\n//  Create player outfit from dna data.\n\n\tfromDNA: function( dna ){\n\n\t\tvar frontAngle = Math.PI - cameraControls.getFrontAngle(); // face front.\n\t\tthis.controller.direction = frontAngle;\n\t\tthis.outfit.fromDNA( dna );\n\t\tscene.add(this.outfit.direction);\n\t\tthis.outfit.update();\n\n\t},\n\n//  Start remote player action.\n\n\tstartAction: function( running, walking, idling, speed, name, eventType ){\n\n\t\tthis.outfit.AnimationsHandler.stop();        \n\t\tthis.controller.isRunning = running;\n\t\tthis.controller.isWalking = walking;\n\t\tthis.controller.isIdling  = idling;\n\t\tthis.controller.movementSpeed = speed;\n\t\tthis.outfit.AnimationsHandler.play( name );\n\t\tthis.controller.dispatchEvent({type: eventType});\n\n\t},\n\n//  Get local player action data.\n\n\tgetActionData: function ( name ){\n\n\t\treturn {\n\t\t\tplayerid : socket.id,\n\t\t\tdirection: this.outfit.direction.rotation.y,\n\t\t\tposition : this.outfit.direction.position.toArray(),\n\t\t\taction   : name,\n\t\t};\n\n\t},\n\n};\n\n\nfunction update(){\n\n\tlocalPlayer.outfit.update();\n\n}\n"
			}],
		"16DCB1E2-ADE8-4B1B-9DFB-FB43C608906A": [
			{
				"name": "camera-controls.js",
				"source": "scene.remove( this );\n\ncameraControls = new MW.TPSCameraControl(camera, localPlayer.holder, {\n\tel: renderer.domElement, // html renderer element.\n\toffset: new THREE.Vector3( 0, 12, 0 ), // camera eye height.\n\tradius: 40, // default: 37 // (distance of the character to the camera).\n\tminRadius: 6, // default: 10 // (can take and negative values, yes!!!).\n\tmaxRadius: 100, // default: 64, runtime: 40.\n\trigidObjects: [], // collition objects for the camera.\n});\n\ncameraControls.getforward = function(){ \n\treturn -cameraControls.theta \n};\n\ncameraControls.setVerticalOffset = function(offset){ \n\tcameraControls.offset.y = offset; \n};\n\n(cameraControls.frontAngleUpdate = function(){\n\twindowAnimationFrameRequestID = requestAnimationFrame( cameraControls.frontAngleUpdate );\n\tcameraControls.forward = -cameraControls.theta;\n})();\n\n//\tUPDATE.\n\nfunction update(){\n\n\tcameraControls.update();\n\n}\n"
			}],
		"F99EC727-E10C-4431-AA2A-3A74531C7701": [
			{
				"name": "key-input-controls.js",
				"source": "scene.remove( this );\n\nkeyInputControls = new MW.KeyInputControl();\n\nkeyInputControls.On = function(){\n\n\tif ( !keyInputControls.isOff ) return;\n\n\t$(keyInputControls).on( \"movekeyon\", onMoveKeyOn );\n\t$(keyInputControls).on( \"movekeyoff\", onMoveKeyOff );\n\t$(keyInputControls).on( \"jumpkeypress\", onJumpInput );\n\t$(keyInputControls).on( \"movekeychange\", onMoveKeyChange );\n\tkeyInputControls.isOff = false;\n\n\tdebugMode && console.log( \"keyInputControls are ON.\" );\n\n};\n\nkeyInputControls.Off = function(){\n\n\tif ( keyInputControls.isOff ) return;\n\n\t$(keyInputControls).off( \"movekeyon\", onMoveKeyOn );\n\t$(keyInputControls).off( \"movekeyoff\", onMoveKeyOff );\n\t$(keyInputControls).off( \"jumpkeypress\", onJumpInput );\n\t$(keyInputControls).off( \"movekeychange\", onMoveKeyChange );\n\tkeyInputControls.isOff = true;\n\n\tdebugMode && console.log( \"keyInputControls are OFF.\" );\n\n};\n\nkeyInputControls.update = function(){\n\n\tif ( keyInputControls.isOff ) return;\n\n\tif ( keyInputControls.isMoveKeyHolded \n\t\t|| localPlayer.controller.isJumping \n\t\t|| !localPlayer.controller.isGrounded \n\t\t|| localPlayer.controller.isOnSlope ){\n\n\t\tthis.dispatchEvent({type:\"update\"});\n\t}\n};\n\nfunction onMoveKeyOn() { \n\n//\tdebugMode && console.log(\"move key on\");\n\n\tif (  localPlayer.controller.isJumping \n\t\t|| !localPlayer.controller.isGrounded \n\t\t||  localPlayer.controller.isOnSlope ) {\n\t\treturn;\n\t}\n\n\tlocalPlayer.controller.direction = (2 * Math.PI) - cameraControls.getFrontAngle() + this.frontAngle;\n\n\tlocalPlayer.outfit.AnimationsHandler.stop();\n\tlocalPlayer.controller.isRunning = true; \n\tlocalPlayer.controller.isWalking = true;\n\tlocalPlayer.controller.movementSpeed = 28;\n\tlocalPlayer.outfit.AnimationsHandler.play(\"walk\");\n\n}\n\nfunction onMoveKeyChange() {\n\n//\tdebugMode && console.log(\"move key changed\");\n\tlocalPlayer.controller.direction = (2 * Math.PI) - cameraControls.getFrontAngle() + this.frontAngle;\n\n}\n\nfunction onMoveKeyOff() {\n\n//\tdebugMode && console.log(\"move key off\");\n\n\tif (  localPlayer.controller.isJumping \n\t\t|| !localPlayer.controller.isGrounded \n\t\t||  localPlayer.controller.isOnSlope ) {\n\t\treturn;\n\t}\n\n\tvar finalDirection = (2 * Math.PI) - cameraControls.getFrontAngle() + this.frontAngle;\n\n\tlocalPlayer.controller.direction = finalDirection;\n\tlocalPlayer.outfit.AnimationsHandler.stop();\n\tlocalPlayer.controller.isRunning = false;\n\tlocalPlayer.controller.isWalking = false;\n\tlocalPlayer.controller.isIdling  = true;\n\tlocalPlayer.controller.movementSpeed = 0;\n\tlocalPlayer.outfit.AnimationsHandler.play(\"idle\");\n\tlocalPlayer.controller.dispatchEvent({type:\"startIdling\"});\n\n}\n\nfunction onJumpInput() {\n\n\tif (  localPlayer.controller.isJumping \n\t\t|| !localPlayer.controller.isGrounded \n\t\t||  localPlayer.controller.isOnSlope ) {\n\t\treturn;\n\t}\n\n\tlocalPlayer.controller.jump();\n\tlocalPlayer.outfit.AnimationsHandler.jump();\n\n}\n\nfunction init(){\n\n\tkeyInputControls.Off(); // important!\n\tkeyInputControls.inRun = false;\n\n}\nfunction start(){\n\n\tkeyInputControls.On(); // important!\n\n}\n\nfunction update(){\n\n\tkeyInputControls.update();\n\n}\n"
			}],
		"B17CBE94-F114-4E09-97BA-6D62F19841EB": [
			{
				"name": "joystick-controls-ui.js",
				"source": "scene.remove( this );\n\n//  Joystick style UI. (DO NOT USE ui.js)\n/*\nvar cssTextContent = \".gameinput-button__inner { display:table-cell; vertical-align: middle; } \"\n+ \".gameinput-joystick { border:solid 0px white; border-radius:50%; position:absolute; bottom:30px; \"\n+ \"user-select:none; touch-action:none; -ms-touch-action:none; -webkit-user-select:none; -moz-user-select:none; -ms-user-select:none; } \"\n+ \".gameinput-frame { position:absolute; top:0; left:0; pointer-events:none; opacity:0.5; } \"\n+ \".gameinput-button { cursor:pointer; text-align:center; position:absolute; display:table; box-sizing:border-box; border:1px solid #333; \"\n+ \"border-radius:50%; background:rgba( 255, 255, 255, .5 ); user-select:none; touch-action:none; \"\n+ \"-ms-touch-action:none; -webkit-user-select:none; -moz-user-select:none; -ms-user-select:none; } \"\n+ \"#joystick1 { bottom:50px; right:40px; width:120px; height:120px; } \"\n+ \"#joystick2 { bottom:50px; left:40px; width:120px; height:120px; } \"\n+ \"#jumpButton { right:105px; bottom:240px; } \"\n+ \"@media ( max-width: 768px ) { \"\n\t+ \"#joystick1 { bottom:0px; right:0px; } #joystick2 { bottom:0px; left:0px; } \"\n\t+ \"#jumpButton { bottom:190px; right:65px; } .gameinput-joystick { bottom:0px;} } \"\n\t+ \".gameinput-joystick__button { position:absolute; width:72px; height:72px; left:85px; top:85px; cursor:pointer; \"\n\t+ \"box-sizing:border-box; border-radius:50%; border:1px solid #333; background:rgba( 255, 255, 255, .5 ); \"\n+ \"}\";\n\nvar styleElement = document.createElement(\"style\");\nstyleElement.innerHTML = cssTextContent;\nstyleElement.classList.add(\"joystick-controls\");\n$( styleElement ).appendTo( document.head );\n\n*/\n\nvar joystick1, joystick2;\n\nvar joysticControls1 = document.createElement( \"div\" );\njoysticControls1.id = \"joystick-controls-1\";\njoysticControls1.classList.add(\"joystick-controls\");\n$( joysticControls1 ).appendTo( player.dom );\n\nvar joysticControls2 = document.createElement( \"div\" );\njoysticControls2.id = \"joystick-controls-2\";\njoysticControls2.classList.add(\"joystick-controls\");\n$( joysticControls2 ).appendTo( player.dom );\n\n//  MW Joystick Controls.\n\n//\tWhy joystick controls is inside setTimeout?\n//\tIn production must be executed as a macrotask. \n//\tRead about for microtasks and macrotasks at: \n//\thttps://javascript.info/event-loop\n\nsetTimeout(function(){\n\n\tvar joystick1Selector  = \"#joystick1\";\n\tvar joystick2Selector  = \"#joystick2\";\n\tvar jumpButtonSelector = \"#jumpButton\";\n\n\tvar joystickControlsSelector  = \".joystick-controls\";\n\tvar joystickControls1Selector = \"#joystick-controls-1\";\n\tvar joystickControls2Selector = \"#joystick-controls-2\";\n\n\tvar buttonSvgSrc = \"<svg width=\\\"48\\\" height=\\\"48\\\" viewBox=\\\"0 0 64 64\\\"><path fill=\\\"#fff\\\" d=\\\"M44.5,54.5c-0.3-5.1-2.4-9.4-5.7-13.2C41,36,40.9,30,38.5,24.7c-1.2-2.7-3.9-4.4-6.9-3.3c-0.2,0.1-0.4,0.1-0.5,0.2c-3-4.3-6.6-8.3-10.1-11.8c-2.6-2.6-6.4,1.7-3.8,4.3c3.9,3.9,8.1,8.5,11,13.7c0,0.1,0.1,0.3,0.2,0.4c1.5,3.2,1.9,6.4,0.2,9.6c-0.3,0.5-0.4,1-0.5,1.5c-1.1,1.5-2.3,3-3.6,4.4c-0.8-2.3-1.4-4.7-1.6-7.1c-0.5-4.6-7.7-4.1-7.2,0.5c0.5,4.9,2.1,9.6,3.9,14.2c0.8,1.9,3.6,3.4,5.4,1.8c2.8-2.4,5.3-4.9,7.5-7.8c0.2,0.1,0.5,0.1,0.7,0.1c0.1,0.3,0.3,0.5,0.5,0.7c1.7,1.8,2.8,3.9,3.3,6.3c-2.2,0.8-4.6,1.4-7,1.4c-4.6,0.1-4.1,7.2,0.5,7.2c4-0.1,7.9-1.3,11.6-3C43.6,57.5,44.6,56.2,44.5,54.5z M34.2,8.9c0.7,0.1,1.6-0.1,2.3,0.3c1.5,0.8,2.6,2.1,3.2,3.6c0.2-2.2,0.5-4.3,0.8-6.5c0.5-3.7-5.1-4.7-5.7-1.1C34.6,6.3,34.3,7.8,34.2,8.9z\\\"/><circle fill=\\\"#fff\\\" cx=\\\"33.8\\\" cy=\\\"15.2\\\" r=\\\"4.9\\\"/></svg>\";\n\n\tjoystick1  = new virtualInput.Joystick( $( joystickControls1Selector ), 94, { id: \"joystick1\" } );\n\tjoystick2  = new virtualInput.Joystick( $( joystickControls2Selector ), 94, { id: \"joystick2\" } );\n\tjumpButton = new virtualInput.Button(   $( joystickControls1Selector ), 58, { id: \"jumpButton\", label: \"<b>JUMP</b>\" } ); // buttonSvgSrc\n\n\tjoystick1.addEventListener( \"active\", function onActive() { \n\n\t\tif (  localPlayer.controller.isJumping \n\t\t\t|| !localPlayer.controller.isGrounded \n\t\t\t|| localPlayer.controller.isOnSlope ) return;\n\n\t\tlocalPlayer.controller.direction = (3 * Math.PI/2) - cameraControls.getFrontAngle() + this.angle; // important!\n\n\t\tif ( localPlayer.controller.isRunning && !localPlayer.controller.isWalking ) {\n\n\t\t\tlocalPlayer.outfit.AnimationsHandler.stop();\n\t\t\tlocalPlayer.controller.movementSpeed = 45;\n\t\t\tlocalPlayer.outfit.AnimationsHandler.play(\"run\");\n\n\t\t} else {\n\n\t\t\tlocalPlayer.outfit.AnimationsHandler.stop();\n\t\t\tlocalPlayer.controller.isRunning = true; \n\t\t\tlocalPlayer.controller.isWalking = false;  // !!!danger: \"false\" cause bug in production server ??? //\n\t\t\tlocalPlayer.controller.movementSpeed = 28;\n\t\t\tlocalPlayer.outfit.AnimationsHandler.play(\"walk\");\n\n\t\t}\n\t});\n\n\tjoystick1.addEventListener( \"disactive\", function onDisactive() { \n\n\t\tif (  localPlayer.controller.isJumping \n\t\t\t|| !localPlayer.controller.isGrounded \n\t\t\t||  localPlayer.controller.isOnSlope ) return;\n\n\t\tlocalPlayer.outfit.AnimationsHandler.stop();\n\t\tlocalPlayer.controller.isRunning = false;\n\t\tlocalPlayer.controller.isWalking = false;\n\t\tlocalPlayer.controller.movementSpeed = 0;\n\t\tlocalPlayer.outfit.AnimationsHandler.play(\"idle\");\n\t\tlocalPlayer.controller.dispatchEvent({type:\"startIdling\"});\n\n\t});\n\n\tjoystick1.update = function(){\n\n\t\tif ( this.isActive ) {\n\n\t\t\tlocalPlayer.controller.direction = (3 * Math.PI/2) - cameraControls.getFrontAngle() + this.angle;\n\n\t\t\tthis.dispatchEvent({type:\"update\"}); // important!\n\n\t\t}\n\t};\n\n\tjoystick2.update = function(){\n\n\t\tif ( this.isActive ) {\n\n\t\t\tcameraControls.setLatLon(\n\t\t\t\tcameraControls.lat + this.position.y * 0.5, // deg.\n\t\t\t\tcameraControls.lon - this.position.x        // deg.\n\t\t\t);\n\n\t\t\tthis.dispatchEvent({type:\"update\"}); // important!\n\t\t}\n\t}\n\n\tjumpButton.addEventListener( \"press\", function onPress() { \n\n\t\tif (  localPlayer.controller.isJumping \n\t\t\t|| !localPlayer.controller.isGrounded \n\t\t\t|| localPlayer.controller.isOnSlope ) return;\n\n\t\tlocalPlayer.controller.jump();\n\t\tlocalPlayer.outfit.AnimationsHandler.jump();\n\n\t});\n\n\tdebugMode && console.log(\"(macrotask) JoystickControls\");\n\n});\n\n//\ton Update.\n\nfunction update(){\n\n\tjoystick1 && joystick1.update();\n\tjoystick2 && joystick2.update();\n\n}\n\n"
			}],
		"19C8F381-5EDF-4D56-B964-A1212AA32D85": [
			{
				"name": "side-panel-ui.js",
				"source": "scene.remove( this );\n\nsidePanel = document.createElement(\"div\");\nsidePanel.id = \"right-side\";\nsidePanel.classList.add(\"side-panel\");\nsidePanel.style.cssText = \"position:absolute;top:0;right:0;bottom:0;width:370px;color:#eee;background:rgba(0,0,0,0.4); \"\n\t\t\t\t\t\t+ \"-webkit-transform:translateX( 340px ); -webkit-transition:-webkit-transform 500ms ease-out;\";\n\nvar container = document.createElement(\"div\");\ncontainer.id = \"right-side-content\";\ncontainer.style.cssText = \"position:absolute;top:40px;left:40px;bottom:20px;right:20px;overflow-x:hidden;\";\n\nvar navContainer = document.createElement(\"div\");\nnavContainer.id = \"rightside-navpill-bar\";\nnavContainer.classList.add(\"side-holder\");\nnavContainer.style.cssText = \"margin-bottom:20px;\";\ncontainer.appendChild( navContainer );\n\nvar tabContainer = document.createElement(\"div\");\ntabContainer.id = \"right-side-panel\";\ntabContainer.classList.add(\"tab-content\");\ncontainer.appendChild( tabContainer );\n\nvar pillContainer = document.createElement(\"ul\");\npillContainer.id = \"nav-pill-tabs\";\npillContainer.classList.add(\"nav\",\"nav-tabs\",\"nav-pills\");\npillContainer.style.cssText = \"display:inline-flex!important;overflow-y:hidden;max-width:300px;scroll-behavior:smooth;\";\nnavContainer.appendChild( pillContainer );\n\nsidePanel.addEventListener( \"mouseenter\", function(){\n\tthis.classList.toggle( \"pinned\", true );\n\tthis.style[\"-webkit-transform\"] = \"translateX( 0 )\";\n});\n\nsidePanel.addEventListener( \"mouseleave\", function(){\n\tthis.classList.toggle( \"pinned\", false );\n\tthis.style[\"-webkit-transform\"] = \"translateX( 340px )\";\n});\n\nsidePanel.appendChild( container );\nplayer.dom.appendChild( sidePanel );\n\nfunction toggleSidePanel( button ){\n\n\tbutton.pinned = !button.pinned;\n\tbutton.classList.toggle( \"pinned\", button.pinned );\n\tbutton.parentElement.classList.toggle( \"pinned\", button.pinned );\n\n\tif ( button.pinned ) \n\t\tsidePanel.dispatchEvent( new Event(\"mouseenter\") );\n\telse\n\t\tsidePanel.dispatchEvent( new Event(\"mouseleave\") );\n\n};\n\n/*\nfunction SidePanelUI(){\n\n//\tattributes.\n\n\tvar container = document.createElement(\"div\");\n\tcontainer.id = \"right-side\";\n\tcontainer.classList.add(\"side-panel\");\n\n//\tcss style.\n\n\tcontainer.style.cssText = \"position:absolute;top:0;right:0;bottom:0;width:300px;color:#eee;background:rgba(0,0,0,0.4); \"\n\t\t\t\t\t\t\t+ \"-webkit-transform:translateX( 340px ); -webkit-transition:-webkit-transform 500ms ease-out;\";\n\n\treturn container;\n\n};\n*/"
			}]
	},
	"camera": {
		"metadata": {
			"version": 4.4,
			"type": "Object",
			"generator": "Object3D.toJSON"
		},
		"object": {
			"uuid": "D2B8B6B5-DE36-4612-BAA1-E2C6963669E2",
			"type": "PerspectiveCamera",
			"name": "Camera",
			"matrix": [-0.544282078742981,1.4862699959650172e-9,0.8389022350311279,0,0.20707248151302338,0.9690569043159485,0.13434919714927673,0,-0.8129439949989319,0.24683743715286255,-0.5274403095245361,0,-25.267362594604492,9.62251091003418,-14.069971084594727,1],
			"fov": 50,
			"zoom": 1,
			"near": 0.1,
			"far": 10000,
			"focus": 10,
			"aspect": 1.848623853211009,
			"filmGauge": 35,
			"filmOffset": 0
		}
	},
	"scene": {
		"metadata": {
			"version": 4.4,
			"type": "Object",
			"generator": "Object3D.toJSON"
		},
		"object": {
			"uuid": "51901104-FADB-43D1-B2A3-15BDFA72A48D",
			"type": "Scene",
			"name": "Scene",
			"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],
			"children": [
				{
					"uuid": "5E90B25E-FD80-4DD9-910F-ADFE7535F7E1",
					"type": "Object3D",
					"name": "Background",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "F65CF23F-D191-4B9C-B53C-09ED7768195E",
					"type": "Object3D",
					"name": "World Octree",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "EE2CFCFB-78B3-4D8C-8398-56EBD4EFBA98",
					"type": "Object3D",
					"name": "Local Player",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "16DCB1E2-ADE8-4B1B-9DFB-FB43C608906A",
					"type": "Object3D",
					"name": "Camera Controls",
					"visible": false,
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "F99EC727-E10C-4431-AA2A-3A74531C7701",
					"type": "Object3D",
					"name": "Key Input Controls",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "B17CBE94-F114-4E09-97BA-6D62F19841EB",
					"type": "Object3D",
					"name": "Joystick Controls",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				},
				{
					"uuid": "19C8F381-5EDF-4D56-B964-A1212AA32D85",
					"type": "Object3D",
					"name": "Side Panel",
					"matrix": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]
				}]
		}
	}
}